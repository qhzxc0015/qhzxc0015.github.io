{"meta":{"title":"thk_days","subtitle":"I think that that that that that article wrote on the blog was wrong.","description":"程序猿 | 熬夜猫 | 次元狗","author":"zxc","url":"http://qhzxc0015.com"},"pages":[{"title":"categories","date":"2017-08-06T21:44:46.000Z","updated":"2017-08-06T21:52:18.927Z","comments":true,"path":"categories/index.html","permalink":"http://qhzxc0015.com/categories/index.html","excerpt":"","text":""},{"title":"guestbook","date":"2017-08-06T18:22:45.000Z","updated":"2017-08-06T21:17:29.436Z","comments":true,"path":"guestbook/index.html","permalink":"http://qhzxc0015.com/guestbook/index.html","excerpt":"","text":""},{"title":"project","date":"2017-08-07T02:21:43.000Z","updated":"2017-08-07T02:22:08.596Z","comments":true,"path":"project/index.html","permalink":"http://qhzxc0015.com/project/index.html","excerpt":"","text":""},{"title":"tags","date":"2017-07-21T12:44:19.000Z","updated":"2017-07-21T12:56:21.358Z","comments":true,"path":"tags/index.html","permalink":"http://qhzxc0015.com/tags/index.html","excerpt":"","text":""},{"title":"photos","date":"2017-08-07T01:36:11.000Z","updated":"2017-08-07T01:36:27.692Z","comments":true,"path":"photos/index.html","permalink":"http://qhzxc0015.com/photos/index.html","excerpt":"","text":""}],"posts":[{"title":"open","slug":"open","date":"2017-08-07T00:49:45.000Z","updated":"2017-08-07T00:51:56.276Z","comments":true,"path":"2017/08/07/open.html","link":"","permalink":"http://qhzxc0015.com/2017/08/07/open.html","excerpt":"","text":"auto 打开md编译器方法: 首先在Hexo目录下的scripts目录中创建一个JavaScript脚本文件。 如果没有这个scripts目录，则新建一个。 scripts目录新建的JavaScript脚本文件可以任意取名。 然后写js脚本: 123456var spawn = require(&apos;child_process&apos;).exec;// Hexo 3 用户复制这段hexo.on(&apos;new&apos;, function(data)&#123; spawn(&apos;start &quot;D:\\typora\\Typora\\Typora.exe&quot; &apos; + data.path);&#125;);","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://qhzxc0015.com/tags/hexo/"}]},{"title":"Kubernetes 部署","slug":"k8s 1.5.2","date":"2017-07-27T07:19:06.000Z","updated":"2017-07-27T07:37:14.056Z","comments":true,"path":"2017/07/27/k8s 1.5.2.html","link":"","permalink":"http://qhzxc0015.com/2017/07/27/k8s 1.5.2.html","excerpt":"本部署方法通过yum来进行自动安装,k8s版本并不是最新版,此方法简单,高效,操作性强,非常好","text":"本部署方法通过yum来进行自动安装,k8s版本并不是最新版,此方法简单,高效,操作性强,非常好 本部署为1.5.2版本:部署参考;可以根据具体需要进行版本升级:升级参考 1. 前期工作 安装环境 IP NAME 组件 OS 202.193.74.179 Master kube-apiserver,kube-scheduler,kube-controller-manager,etcd Centos 7.2 202.193.75.34 Node kube-proxy kubelet flannel Centos 7.2 202.193.75.11 Node kube-proxy kubelet flannel Centos 7.2 关闭防火墙12sudo systemctl stop firewalld sudo systemctl disable firewalld 2. 部署环境Master 安装etcd和kubernetessudo yum -y install etcd kubernetes-master 配置文件1.修改/etc/etcd/etcd.conf 1234567891011121314151617181920212223242526272829303132333435363738394041424344# [member]ETCD_NAME=defaultETCD_DATA_DIR=&quot;/var/lib/etcd/default.etcd&quot;#ETCD_WAL_DIR=&quot;&quot;#ETCD_SNAPSHOT_COUNT=&quot;10000&quot;#ETCD_HEARTBEAT_INTERVAL=&quot;100&quot;#ETCD_ELECTION_TIMEOUT=&quot;1000&quot;#ETCD_LISTEN_PEER_URLS=&quot;http://localhost:2380&quot;ETCD_LISTEN_CLIENT_URLS=&quot;http://0.0.0.0:2379&quot;#ETCD_MAX_SNAPSHOTS=&quot;5&quot;#ETCD_MAX_WALS=&quot;5&quot;#ETCD_CORS=&quot;&quot;##[cluster]#ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;http://localhost:2380&quot;# if you use different ETCD_NAME (e.g. test), set ETCD_INITIAL_CLUSTER value for this name, i.e. &quot;test=http://...&quot;#ETCD_INITIAL_CLUSTER=&quot;default=http://localhost:2380&quot;#ETCD_INITIAL_CLUSTER_STATE=&quot;new&quot;#ETCD_INITIAL_CLUSTER_TOKEN=&quot;etcd-cluster&quot;ETCD_ADVERTISE_CLIENT_URLS=&quot;http://localhost:2379&quot;#ETCD_DISCOVERY=&quot;&quot;#ETCD_DISCOVERY_SRV=&quot;&quot;#ETCD_DISCOVERY_FALLBACK=&quot;proxy&quot;#ETCD_DISCOVERY_PROXY=&quot;&quot;#ETCD_STRICT_RECONFIG_CHECK=&quot;false&quot;#ETCD_AUTO_COMPACTION_RETENTION=&quot;0&quot;##[proxy]#ETCD_PROXY=&quot;off&quot;#ETCD_PROXY_FAILURE_WAIT=&quot;5000&quot;#ETCD_PROXY_REFRESH_INTERVAL=&quot;30000&quot;#ETCD_PROXY_DIAL_TIMEOUT=&quot;1000&quot;#ETCD_PROXY_WRITE_TIMEOUT=&quot;5000&quot;#ETCD_PROXY_READ_TIMEOUT=&quot;0&quot;##[security]#ETCD_CERT_FILE=&quot;&quot;#ETCD_KEY_FILE=&quot;&quot;#ETCD_CLIENT_CERT_AUTH=&quot;false&quot;#ETCD_TRUSTED_CA_FILE=&quot;&quot;#ETCD_AUTO_TLS=&quot;false&quot;#ETCD_PEER_CERT_FILE=&quot;&quot;#ETCD_PEER_KEY_FILE=&quot;&quot;#ETCD_PEER_CLIENT_CERT_AUTH=&quot;false&quot; 2.修改/etc/kubernetes/apiserver1234567891011121314151617181920212223242526#### kubernetes system config## The following values are used to configure the kube-apiserver## The address on the local server to listen to.KUBE_API_ADDRESS=&quot;--insecure-bind-address=0.0.0.0&quot;# The port on the local server to listen on.# KUBE_API_PORT=&quot;--port=8080&quot;# Port minions listen on# KUBELET_PORT=&quot;--kubelet-port=10250&quot;# Comma separated list of nodes in the etcd clusterKUBE_ETCD_SERVERS=&quot;--etcd-servers=http://127.0.0.1:2379&quot;# Address range to use for servicesKUBE_SERVICE_ADDRESSES=&quot;--service-cluster-ip-range=10.254.0.0/16&quot;# default admission control policiesKUBE_ADMISSION_CONTROL=&quot;--admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota&quot;# Add your own!KUBE_API_ARGS=&quot;&quot; 3.修改/etc/kubernetes/controller-manager1234567#### The following values are used to configure the kubernetes controller-manager# defaults from config and apiserver should be adequate# Add your own!KUBE_CONTROLLER_MANAGER_ARGS=&quot;--node-monitor-grace-period=10s --pod-eviction-timeout=10s&quot; 4.修改/etc/kubernetes/config12345678910111213141516171819202122#### kubernetes system config## The following values are used to configure various aspects of all# kubernetes services, including## kube-apiserver.service# kube-controller-manager.service# kube-scheduler.service# kubelet.service# kube-proxy.service# logging to stderr means we get it in the systemd journalKUBE_LOGTOSTDERR=&quot;--logtostderr=true&quot;# journal message level, 0 is debugKUBE_LOG_LEVEL=&quot;--v=0&quot;# Should this cluster be allowed to run privileged docker containersKUBE_ALLOW_PRIV=&quot;--allow-privileged=false&quot;# How the controller-manager, scheduler, and proxy find the apiserverKUBE_MASTER=&quot;--master=http://202.193.74.179:8080&quot; 启动服务开机自启sudo systemctl enable etcd kube-apiserver kube-scheduler kube-controller-manager启动服务sudo systemctl start etcd kube-apiserver kube-scheduler kube-controller-manager 配置etcd中的网络node节点的flannel会拉取这里的配置etcdctl mk /coreos.com/network/config &#39;{&quot;Network&quot;:&quot;172.17.0.0/16&quot;}&#39; Node(minions) 安装kubernetes-node和 flannel(会自动安装docker)sudo yum -y install kubernetes-node flannel 配置文件1.修改/etc/kubernetes/config 1234567891011121314151617181920212223#### kubernetes system config## The following values are used to configure various aspects of all# kubernetes services, including## kube-apiserver.service# kube-controller-manager.service# kube-scheduler.service# kubelet.service# kube-proxy.service# logging to stderr means we get it in the systemd journalKUBE_LOGTOSTDERR=&quot;--logtostderr=true&quot;# journal message level, 0 is debugKUBE_LOG_LEVEL=&quot;--v=0&quot;# Should this cluster be allowed to run privileged docker containersKUBE_ALLOW_PRIV=&quot;--allow-privileged=false&quot;# How the controller-manager, scheduler, and proxy find the apiserver#KUBE_MASTER=&quot;--master=http://127.0.0.1:8080&quot;KUBE_MASTER=&quot;--master=http://202.193.74.179:8080&quot; 2.修改/etc/kubernetes/kubelet (注意修改每个node的IP)1234567891011121314151617181920#### kubernetes kubelet (minion) config# The address for the info server to serve on (set to 0.0.0.0 or &quot;&quot; for all interfaces)KUBELET_ADDRESS=&quot;--address=127.0.0.1&quot;# The port for the info server to serve on# KUBELET_PORT=&quot;--port=10250&quot;# You may leave this blank to use the actual hostnameKUBELET_HOSTNAME=&quot;--hostname-override=202.193.75.11&quot;# location of the api-serverKUBELET_API_SERVER=&quot;--api-servers=http://202.193.74.179:8080&quot;# pod infrastructure containerKUBELET_POD_INFRA_CONTAINER=&quot;--pod-infra-container-image=registry.access.redhat.com/rhel7/pod-infrastructure:latest&quot;# Add your own!KUBELET_ARGS=&quot;--pod-infra-container-image=kubernetes/pause&quot; 3.修改/etc/sysconfig/flanneld123456789101112# Flanneld configuration options # etcd url location. Point this to the server where etcd runsFLANNEL_ETCD_ENDPOINTS=&quot;http://202.193.74.179:2379&quot;# etcd config key. This is the configuration key that flannel queries# For address range assignment#FLANNEL_ETCD_PREFIX=&quot;/atomic.io/network&quot;FLANNEL_ETCD_PREFIX=&quot;/coreos.com/network&quot;# Any additional options that you want to passFLANNEL_OPTIONS=&quot; -iface=eth33&quot; 其中FLANNEL_OPTIONS=&quot; -iface=eth0&quot;的eth0是网卡名称 启动服务sudo systemctl restart flanneld dockersudo systemctl start kubelet kube-proxysudo systemctl enable flanneld kubelet kube-proxy 3. 验证在master上1234[root@179 centos]# kubectl get nodesNAME STATUS AGE202.193.75.11 Ready 29m202.193.75.34 Ready 6m 4. 附录Error 1: 12[centos@179 message_board]$ kubectl get podsNo resources found. 解决方法:参考链接,认证问题,可以跳过认证方法:12#vim /etc/kubernetes/apiserverKUBE_ADMISSION_CONTROL=&quot;--admission_control=NamespaceLifecycle,NamespaceExists,LimitRanger,ResourceQuota&quot;","categories":[],"tags":[{"name":"技术","slug":"技术","permalink":"http://qhzxc0015.com/tags/技术/"}]},{"title":"first blog","slug":"first-blog","date":"2017-07-20T13:55:06.000Z","updated":"2017-07-21T12:55:29.458Z","comments":true,"path":"2017/07/20/first-blog.html","link":"","permalink":"http://qhzxc0015.com/2017/07/20/first-blog.html","excerpt":"啦啦啦~前方高能~这不是演习","text":"啦啦啦~前方高能~这不是演习 啦啦啦啦 这个是第一个微博,是不是很酷炫呀 然后然后 1this is test file","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://qhzxc0015.com/tags/hexo/"}]},{"title":"Markdown介绍","slug":"md介绍","date":"2017-07-20T13:55:06.000Z","updated":"2017-07-22T02:01:51.868Z","comments":true,"path":"2017/07/20/md介绍.html","link":"","permalink":"http://qhzxc0015.com/2017/07/20/md介绍.html","excerpt":"Markdown 语法简单，记忆负担小，纯文本，流畅书写，无违和感，各种实时渲染效果,所以被刚广泛使用","text":"Markdown 语法简单，记忆负担小，纯文本，流畅书写，无违和感，各种实时渲染效果,所以被刚广泛使用 优点 语法简单，记忆负担小，纯文本，流畅书写，无违和感，各种实时渲染效果。 markdown是为那些需要经常码东西并且进行文字排版的、对码字手速和排版顺畅度有要求的人群设计的，他们希望用键盘把文字内容啪啪啪地打出来后就已经排版好了，最好从头到尾都不要使用鼠标。这些人包括经常需要写文档的码农、博客写手、网站小编、出版业人士等等。 通常情况下，网络上需要进行大量文字输入的地方都可以通过所见即所得的方式排版 再强调一下实时的渲染效果。无论新手老手写 Markdown 的时候最担心的是不知道自己写的对不对，最后渲染效果是不是准确无误。就好象写完代码你一定要自己测试一下才放心，写 Markdown 就是在写代码，实时的渲染效果就是在做测试，这就是为什么网络上有那么多左右两屏带实时渲染的 Markdown 工具的原因（另一个原因是宽屏）1 公式,[^LaTeX]: 支持 LaTeX 编辑显示支持，例如：$\\sum_{i=1}^n a_i=0$， 访问 MathJax $$ x = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$ $$\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.$$ $$ \\begin{matrix} 1 &amp; x &amp; x^2 \\ 1 &amp; y &amp; y^2 \\ 1 &amp; z &amp; z^2 \\ \\end{matrix}$$ $$ \\left[ \\begin{array}{cc|c} 1&amp;2&amp;3\\ 4&amp;5&amp;6 \\end{array}\\right] $$ \\begin{align}\\sqrt{37} &amp; = \\sqrt{\\frac{73^2-1}{12^2}} \\ &amp; = \\sqrt{\\frac{73^2}{12^2}\\cdot\\frac{73^2-1}{73^2}} \\ &amp; = \\sqrt{\\frac{73^2}{12^2}}\\sqrt{\\frac{73^2-1}{73^2}} \\ &amp; = \\frac{73}{12}\\sqrt{1 - \\frac{1}{73^2}} \\ &amp; \\approx \\frac{73}{12}\\left(1 - \\frac{1}{2\\cdot73^2}\\right)\\end{align} $ \\newcommand{\\SES}[3]{ 0 \\to #1 \\to #2 \\to #3 \\to 0 } $ 表格| 1 | 2 | 3 | 4 || —- | —: | :–: | —- || 1 | 1 | 1 | 1 | Item Value Computer \\$1600 Phone \\$12 Pipe \\$1 1.这个是脚注 ↩","categories":[],"tags":[{"name":"技术","slug":"技术","permalink":"http://qhzxc0015.com/tags/技术/"}]},{"title":"hexo基本配置","slug":"hexo","date":"2017-07-19T13:55:06.000Z","updated":"2017-07-21T15:04:07.503Z","comments":true,"path":"2017/07/19/hexo.html","link":"","permalink":"http://qhzxc0015.com/2017/07/19/hexo.html","excerpt":"这里不错吧,是吧,是吧,来来来,看一下hexo啦~","text":"这里不错吧,是吧,是吧,来来来,看一下hexo啦~ 常用命令 1234567891011121314hexo clean #清除PUBLIC和编译文件hexo generate #编译网站目录hexo deploy #同步到GIT 或者CODINGnpm install &lt;plugin-name&gt; --save #安装npm update #升级npm uninstall &lt;plugin-name&gt; #卸载hexo new”postName” #新建文章 #存放在主目录的source下的POST目录下hexo new page”pageName” #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）hexo deploy #将.deploy目录部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本 主目录 12345678910├── .deploy #需要部署的文件├── node_modules #Hexo插件├── public #生成的静态网页文件├── scaffolds #模板├── source #博客正文和其他源文件, 404 favicon CNAME 等都应该放在这里| ├── _drafts #草稿| └── _posts #文章├── themes #主题├── _config.yml #全局配置文件└── package.json 主题目录 123456789101112131415161718├── languages #国际化| ├── default.yml #默认| └── zh-CN.yml #中文├── layout #布局| ├── _partial #局部的布局| └── _widget #小挂件的布局├── script #js脚本├── source #源代码文件| ├── css #CSS| | ├── _base #基础CSS| | ├── _partial #局部CSS| | ├── fonts #字体| | ├── images #图片| | └── style.styl #style.css| ├── fancybox #fancybox| └── js #js├── _config.yml #主题配置文件└── README.md #主题介绍 以上目录中常用的有: scaffolds source themes config.yml 根配置文件:_config.yml 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071# Site #站点信息title: lmintlcx #标题subtitle: 做人不卖萌跟咸鱼有什么区别 #副标题description: lmintlcx lm lcx blog #描述author: lmintlcx #作者language: zh-Hans #语言timezone: Asia/Shanghai #时区# URL #链接格式url: http://joryhe.coding.me/ #网址root: / #根目录permalink: post/:title.html #文章的链接格式permalink_defaults:# Directory #目录source_dir: source #源文件public_dir: public #生成的网页文件tag_dir: tags #标签archive_dir: archives #归档category_dir: categories #分类code_dir: downloads/codei18n_dir: :lang #国际化skip_render:# Writing #写作new_post_name: :title.md #新文章标题default_layout: post #默认模板titlecase: false #标题转换成大写external_link: true #新标签页里打开连接filename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: #语法高亮 enable: true line_number: false #显示行号 auto_detect: true tab_replace:# Category &amp; Tag #分类和标签default_category: uncategorized #默认分类category_map:tag_map:# Date / Time format #日期时间格式date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination #分页per_page: 20 #每页文章数, 设置成 0 禁用分页pagination_dir: page# Extensions #插件和主题## 插件: http://hexo.io/plugins/## 主题: http://hexo.io/themes/theme: next# Deployment #部署, joryhe是我的用户名, 同时发布GitHub deploy: type: git repo: github: github: git@github.com:joryhe/joryhe.github.io.git,master# Disqus #Disqus评论系统disqus_shortname: plugins: #插件，例如生成 RSS 和站点地图的- hexo-generator-feed- hexo-generator-sitemap 主题配置文件 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677menu: #菜单 home: / #首页 archives: /archives #归档 about: /about #关于 #commonweal: /404.html #公益404 #tags: /tags #标签 #categories: /categories #分类## 经典介绍配置# 小图标favicon: /favicon.ico# 默认关键词keywords: # 留空使用默认的, false 禁用, 也可以写指定的地址rss:# Icon fonts# default | linecons | fifty-shades | feathericon_font: default# 代码高亮主题 https://github.com/chriskempson/tomorrow-theme# normal | night | night eighties | night blue | night brighthighlight_theme: normal# MathJax Support #数学公式mathjax: true# Schemes #启用主题中的主题Mistscheme: Mist# 侧边栏# - post 只在文章页面显示# - always 所有页面显示# - hide 隐藏sidebar: always# 自动滚动到&quot;阅读更多&quot;标记的下面scroll_to_more: true# 自动给目录添加序号toc_list_number: true# 自动截取摘要auto_excerpt: enable: false length: 150# Lato 字体use_font_lato: true# Make duoshuo show UA# user_id must NOT be null when admin_enable is true!# you can visit http://dev.duoshuo.com get duoshuo user id.duoshuo_info: ua_enable: true admin_enable: false user_id: 0 #admin_nickname: ROOT## DO NOT EDIT THE FOLLOWING SETTINGS## UNLESS YOU KNOW WHAT YOU ARE DOING# 动画use_motion: true# Fancybox 看图插件fancybox: true# Static filesvendors: vendorscss: cssjs: jsimages: images# Theme versionversion: 0.4.5.1","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://qhzxc0015.com/tags/hexo/"}]},{"title":"demo","slug":"mod","date":"2017-07-19T13:55:06.000Z","updated":"2017-08-06T08:10:29.735Z","comments":true,"path":"2017/07/19/mod.html","link":"","permalink":"http://qhzxc0015.com/2017/07/19/mod.html","excerpt":"啦","text":"啦","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://qhzxc0015.com/tags/hexo/"}]}]}